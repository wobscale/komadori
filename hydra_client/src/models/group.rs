/* 
 * ORY Hydra - Cloud Native OAuth 2.0 and OpenID Connect Server
 *
 * Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here. Keep in mind that this document reflects the latest branch, always. Support for versioned documentation is coming in the future.
 *
 * OpenAPI spec version: Latest
 * Contact: hi@ory.am
 * Generated by: https://openapi-generator.tech
 */

/// Group : Group represents a warden group

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Group {
  /// ID is the groups id.
  #[serde(rename = "id")]
  id: Option<String>,
  /// Members is who belongs to the group.
  #[serde(rename = "members")]
  members: Option<Vec<String>>
}

impl Group {
  /// Group represents a warden group
  pub fn new() -> Group {
    Group {
      id: None,
      members: None
    }
  }

  pub fn set_id(&mut self, id: String) {
    self.id = Some(id);
  }

  pub fn with_id(mut self, id: String) -> Group {
    self.id = Some(id);
    self
  }

  pub fn id(&self) -> Option<&String> {
    self.id.as_ref()
  }

  pub fn reset_id(&mut self) {
    self.id = None;
  }

  pub fn set_members(&mut self, members: Vec<String>) {
    self.members = Some(members);
  }

  pub fn with_members(mut self, members: Vec<String>) -> Group {
    self.members = Some(members);
    self
  }

  pub fn members(&self) -> Option<&Vec<String>> {
    self.members.as_ref()
  }

  pub fn reset_members(&mut self) {
    self.members = None;
  }

}




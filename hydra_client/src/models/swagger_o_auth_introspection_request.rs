/* 
 * ORY Hydra - Cloud Native OAuth 2.0 and OpenID Connect Server
 *
 * Welcome to the ORY Hydra HTTP API documentation. You will find documentation for all HTTP APIs here. Keep in mind that this document reflects the latest branch, always. Support for versioned documentation is coming in the future.
 *
 * OpenAPI spec version: Latest
 * Contact: hi@ory.am
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SwaggerOAuthIntrospectionRequest {
  /// An optional, space separated list of required scopes. If the access token was not granted one of the scopes, the result of active will be false.  in: formData
  #[serde(rename = "scope")]
  scope: Option<String>,
  /// The string value of the token. For access tokens, this is the \"access_token\" value returned from the token endpoint defined in OAuth 2.0 [RFC6749], Section 5.1. This endpoint DOES NOT accept refresh tokens for validation.
  #[serde(rename = "token")]
  token: String
}

impl SwaggerOAuthIntrospectionRequest {
  pub fn new(token: String) -> SwaggerOAuthIntrospectionRequest {
    SwaggerOAuthIntrospectionRequest {
      scope: None,
      token: token
    }
  }

  pub fn set_scope(&mut self, scope: String) {
    self.scope = Some(scope);
  }

  pub fn with_scope(mut self, scope: String) -> SwaggerOAuthIntrospectionRequest {
    self.scope = Some(scope);
    self
  }

  pub fn scope(&self) -> Option<&String> {
    self.scope.as_ref()
  }

  pub fn reset_scope(&mut self) {
    self.scope = None;
  }

  pub fn set_token(&mut self, token: String) {
    self.token = token;
  }

  pub fn with_token(mut self, token: String) -> SwaggerOAuthIntrospectionRequest {
    self.token = token;
    self
  }

  pub fn token(&self) -> &String {
    &self.token
  }


}



